class e{contructor(e){this.position=e}update(e){}draw(e,t){}keyboard_event(e){}}class t extends e{update(){}keyboard_event(){}draw(e,t){const i=(1/e).toFixed(0);t.font="30px Arial",t.fillStyle="red",t.fillText(`FPS: ${i}`,5,30)}}class i extends e{update(){}keyboard_event(){}draw(e,t){t.font="30px Arial",t.fillStyle="red",t.fillText("Time: 00:00",5,80)}}class s extends e{update(){}keyboard_event(){}draw(e,t){t.font="30px Arial",t.fillStyle="red",t.fillText("Score: 00",5,130)}}class r extends e{update(){}keyboard_event(){}draw(e,t){t.font="20px Arial",t.fillStyle="red",t.fillText("Instructions",780,30),t.fillText("ArrowUp: Rotate",780,70),t.fillText("ArrowLeft: Move to left",780,110),t.fillText("ArrowRight: Move to right",780,150),t.fillText("ArrowDown: Soft drop",780,190),t.fillText("Spacebar: Hard drop",780,230)}}const o=document.getElementById("canvas"),n=(o.getContext("2d"),o.width),d=o.height,a=o.width/2,c=d,l=a/12;class h extends e{update(){}keyboard_event(){}draw(e,t){t.strokeStyle="Red",t.strokeRect(n/4,0,a,c)}}class p extends e{update(){}keyboard_event(){}draw(e,t){t.strokeStyle="Red",t.strokeRect(13*n/16,5*d/8,2*n/16,2*d/8)}}const w={LR:[[0,0,0,0,0],[0,0,1,0,0],[0,0,1,0,0],[0,0,1,1,0],[0,0,0,0,0]],LL:[[0,0,0,0,0],[0,0,1,0,0],[0,0,1,0,0],[0,1,1,0,0],[0,0,0,0,0]],Z:[[0,0,0,0,0],[0,0,0,0,0],[0,1,1,0,0],[0,0,1,1,0],[0,0,0,0,0]],S:[[0,0,0,0,0],[0,0,0,0,0],[0,0,1,1,0],[0,1,1,0,0],[0,0,0,0,0]],Q:[[0,0,0,0,0],[0,0,0,0,0],[0,0,1,1,0],[0,0,1,1,0],[0,0,0,0,0]],I:[[0,0,1,0,0],[0,0,1,0,0],[0,0,1,0,0],[0,0,1,0,0],[0,0,1,0,0]],T:[[0,0,0,0,0],[0,0,0,0,0],[0,0,1,0,0],[0,1,1,1,0],[0,0,0,0,0]]};class x extends e{constructor(e){super(),this.pieceSize=l,this.origin={x:e.x,y:e.y},this.speed={x:0,y:l/2},this.currentPiece=w.I,console.log(w)}update(e){let t=this.origin.y+=this.speed.y*e;t<d-this.pieceSize&&t>=0&&(this.origin.y=t)}rotate(){}keyboard_event(e){switch(e){case"ArrowRight":this.origin.y!=d-this.pieceSize&&this.origin.x>=a/2&&this.origin.x<3*a/2-this.pieceSize&&(this.origin.x+=this.pieceSize/2);break;case"ArrowLeft":this.origin.y!=d-this.pieceSize&&this.origin.x>a/2+this.pieceSize/2&&this.origin.x<3*a/2-this.pieceSize/2&&(this.origin.x-=this.pieceSize/2);break;case"ArrowDown":this.origin.y==d-this.pieceSize?(this.speed.y=0,this.speed.x=0):this.speed.y+=this.pieceSize;break;case" ":this.origin.y=d-this.pieceSize,this.speed.x=0,this.speed.y=0}}draw(e,t){t.save(),t.translate(this.origin.x,this.origin.y);for(let e=0;e<this.currentPiece.length;e++)for(let i=0;i<this.currentPiece[e].length;i++)1==this.currentPiece[e][i]&&t.fillRect(this.pieceSize*i,this.pieceSize*e,this.pieceSize,this.pieceSize);t.restore()}}window.onload=()=>{const e=document.getElementById("canvas"),o=e.getContext("2d");let n=new r,d=new h,a=new p,c=new t,w=new i,y=new s,f=[n,d,a,new x({x:e.width/2-l/2,y:0}),c,w,y],S=0;const g=t=>{let i=(t-S)/1e3;S=t,f.forEach((e=>e.update(i))),o.clearRect(0,0,e.width,e.width),f.forEach((e=>{o.save(),e.draw(i,o),o.restore()})),window.requestAnimationFrame(g)};window.requestAnimationFrame(g),document.body.addEventListener("keydown",(e=>{f.forEach((t=>{t.keyboard_event(e.key)}))}))};
//# sourceMappingURL=index.63068c86.js.map
